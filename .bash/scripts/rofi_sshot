#!/bin/bash

### Requirements:
# rofi

### Description:
# This is a rofi menu that houses the `sshot` script.
# It selects some basic parameters via the list and feeds them
# to the script.
function _rofi_menu() {
    # close previous notifications if they are shown
    if has dunst; then
        dunstctl close all
    elif has notify-send; then
        # NOTE: untested, hopefully works
        pkill notify-osd
    fi

    local menu_text=`echo -e "ðŸ–µ     Entire screen
âœ€     Region 
ðŸ–µ     In 3 seconds
ðŸ–µ     In 5 seconds
ðŸ–µ     In 10 seconds
ðŸ—‘    Clear screenshots
X      Cancel" | rofi -dmenu -i -p "Screenshot" -location 3 -width 20 -lines 7 -hide-scrollbar -font "Roboto Condensed 11" -yoffset 34 -xoffset`
    local mode=""
    local delay=0
    if [[ $menu_text == *[E\|e]ntire* ]]; then
        mode="-f"
    elif [[ $menu_text == *[R\|r]egion* ]]; then
        mode=""
    elif [[ $menu_text == *3* ]]; then
        delay=3
        mode="-f"
    elif [[ $menu_text == *5* ]]; then
        delay=5
        mode="-f"
    elif [[ $menu_text == *10* ]]; then
        delay=10
        mode="-f"
    elif [[ $menu_text == *[C\|c]lear* ]]; then
        mode="--purge"
    elif [[ $menu_text == *[C\|c]ancel* ]]; then
        exit 1
    else
        exit 0
    fi

    # silently stall a bit for rofi to close
    sshot -s -f -o /tmp/test.png
    sleep 0.1
    # then take the actual screenshot
    echo $PATH > /tmp/path.txt
    sshot $mode -d $delay
}

. ~/.bash/scripts/add_dir_to_path.sh
echo $PATH > /tmp/path.txt
_rofi_menu $@
