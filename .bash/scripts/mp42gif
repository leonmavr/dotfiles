#!/bin/bash

mp42gif() {
    # dependencies
    [ ! -z `which ffmpeg` ] && exit -1
    #read cmd arguments
    while [[ $# -gt 0 ]]; do
        key="$1"
        case $key in
            -f|--from|-from)
                arg_from="$2"
                shift # past argument
                shift # past value
                ;;
            -t|--to|-to)
                arg_to="$2"
                shift
                shift
                ;;
            -r|--resolution|-res|--res)
                arg_resolution="$2"
                shift
                shift
                ;;
            -fps|--fps|--frames-per-second)
                arg_fps="$2"
                shift
                shift
                ;;
            *)
                # this is the file to convert
                arg_file_input="$1"
                shift
                ;;
        esac
    done

    # default values
    [ ! -x $arg_to ] && to="-to $arg_to" || to=""
    [ ! -x $arg_from ] && from="-ss $arg_from" || from=""
    [ ! -x $arg_resolution ] && resolution="$arg_resolution" || resolution=480
    local fps_orig=`ffprobe $arg_file_input 2>&1  | grep -Eo "[0-9]+\.*[0-9]* fps" | grep -Eo "[0-9]+\.*[0-9]*"`
    fps_orig=`printf "%.0f" $fps_orig`
    [ ! -x $arg_fps ] && fps="$arg_fps" || fps=$fps_orig

    local mp4_cut=/tmp/cut.mp4
    local dur_frames=`echo "(${arg_to}-${arg_from})*$fps" | bc -l`
    dur_frames=${dur_frames%.*} # convert to int

    # cut the video
    ffmpeg $from -i "$arg_file_input" -c:v libx264 -c:a aac -frames:v $dur_frames $mp4_cut -y
    # convert cut part to mp4
    ffmpeg -i $mp4_cut -vf "fps=$fps,scale=$resolution:-1:flags=lanczos,split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse" -loop 0 /tmp/output.gif -y
    echo "===== gif saved at /tmp/output.gif ====="
    rm ${mp4_cut} 
}


mp42gif $@
