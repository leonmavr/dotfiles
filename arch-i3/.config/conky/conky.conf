--[[
Conky, a system monitor, based on torsmo

Any original torsmo code is licensed under the BSD license

All code written since the fork of torsmo is licensed under the GPL

Please see COPYING for details

Copyright (c) 2004, Hannu Saransaari and Lauri Hakkarainen
Copyright (c) 2005-2019 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)
All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
]]

conky.config = {
    alignment = 'top_right',
    background = true,
    border_width = 1,
    color1 = '#d3e2e4',
    color2 = '#9bcbff',
    color3 = '#8bb8e5',
    color4 = '#e6f1f4',
    cpu_avg_samples = 2,
    default_color = '#9bcbff',
    default_outline_color = 'white',
    default_shade_color = 'white',
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    double_buffer = true,
    use_xft = true,
    font = 'DejaVu Sans Mono:size=12',
    gap_x = 15,
    gap_y = 25,
    minimum_height = 5,
    minimum_width = 5,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    extra_newline = false,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    own_window_type = 'override',
    own_window_transparent = true, 
    own_window_argb_visual = true,
    stippled_borders = 0,
    update_interval = 2.0,
    uppercase = false,
    use_spacer = 'none',
    show_graph_scale = false,
    show_graph_range = false
}


conky.text = [[
${font Arial:size=34:weight=Bold}${alignc}${color1}${tztime Europe/Berlin %H}${font}
${font Arial:size=22:weight=Bold}${alignc}${color1}:${tztime Europe/Berlin %M}${font}
${font Source Code Pro:size=12}${alignc}${color1}${color}GMT+2: ${color1}${font Arial:size=12}${tztime Europe/Athens %H:%M}${font}
#################################################
${font Ubuntu:size=14}${color2}FILE SYSTEMS${color2}${hr 2}${font}
# for the filesystems, use the path where they're mounted, not /dev/sda*
# NOTE: you might need to change the bar column position (goto XXX)
${color2}root: ${color1}${fs_used /}/${fs_size /}${goto 240} ${fs_bar 6 /}
${color2}home: ${color1}${fs_used /home}/${fs_size /home}${goto 250}${fs_bar 6 /home}
#################################################
${font Ubuntu:size=14}${color2}CURRENT${color2}${hr 2}${font}
${color}CPU:${color1} $cpu% of $freq_g GHz
${cpubar 6}
${color}RAM:${color1} $memperc% of $memmax
${color1}${membar 6}
${color}Swap:${color1} $swap of $swapmax
${color1}${swapbar 6}
# find Ethernet status for `enp0s3` interface and change symbol
# every now and then. Note sure why voffset needed but it works... 
${color}Eth:${color1}${if_up enp0s3}UP, ${voffset -2}${font :size=13}${execi 2 [ $[ $RANDOM % 2 ] == 0 ] && echo ⬆ || echo ↑}${font}${upspeed enp0s3}${voffset -2} ${font :size=13}${execi 2 [ $[ $RANDOM % 2 ] == 0 ] && echo ↓ || echo ⬇}${font}${downspeed enp0s3}${else}DOWN${endif}
#################################################
#${color darkgrey}Processes:$color $processes  ${color grey}Running:$color $running_processes
${font Ubuntu:size=14}${color2}HISTORY${color2}${hr 2}${font}
# for gradient fill light: e6f1f4 darker: 8bb8e5
${voffset 0}${color2}CPU:
${cpugraph 30,0 8bb8e5 e6f1f4}
${voffset 0}${color2}RAM:
${memgraph 30,0 8bb8e5 e6f1f4}
${voffset 0}${color2}I/O root:${alignr}${color2}I/O home:
${diskiograph /dev/sda1 30,140 8bb8e5 e6f1f4} ${alignr}${diskiograph /dev/sda3 30,140 8bb8e5 e6f1f4}
#################################################
# do $ pgrep <p name> to find PID, omitted to save space. Also, try `top mem X`
${font Ubuntu:size=14}${color2}PROCESSES${color2}${hr 2}${font}
Name${goto 100}  ${alignr}CPU%
${color1}${top name 1}${alignr}${top cpu 1}
${color1}${top name 2}${alignr}${top cpu 2}
${color1}${top name 3}${alignr}${top cpu 3}
${color1}${top name 4}${alignr}${top cpu 4}
]]

